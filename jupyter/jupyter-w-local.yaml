apiVersion: v1
kind: Namespace
metadata:
  name: stone-data-lake

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: example-local-pv-01
  namespace: stone-data-lake
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
#    path-for-windows: /run/desktop/mnt/host/c/PATH/TO/FILE
    path: /run/desktop/mnt/host/c/Users/c.stone/Documents/GitHub/data_lake_example/jupyter/work
#    path: ${_local_volume_path}
#    path: /c/Users/c.stone/Documents/GitHub/data_lake_example/jupyter/work
#    path: /mnt/disks/ssd1
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop
#                - node-01
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: example-local-pvc
  namespace: stone-data-lake
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
# Weirdly the storage for PVC must be less than the persistent-volumes size    
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyter-notebook
  namespace: stone-data-lake
  labels:
    app: jupyter-notebook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyter-notebook
  template:
    metadata:
      labels:
        app: jupyter-notebook
    spec:
      containers:
      - name: minimal-notebook
        image: jupyter/minimal-notebook:latest
        ports:
        - containerPort: 8888
        command: ["start-notebook.sh"]
        args: ["--NotebookApp.token=''"]
        volumeMounts:
        - mountPath: "/home/jovyan/work"
          name: local-storage
      volumes:
      - name: local-storage
        persistentVolumeClaim:
          claimName: example-local-pvc
#        volumeMounts: 
#        - mountPath: /home/jovyan/work
#          name: jupyter-work-volume
#          #readOnly: false
#      volumes: 
#      - name: jupyter-work-volume
#        hostPath:
#          path: work
---
kind: Service
apiVersion: v1
metadata:
  name: jupyter-notebook
  namespace: stone-data-lake
spec:
  type: NodePort
  selector:
    app: jupyter-notebook
  ports:
  - protocol: TCP
    nodePort: 30400
    port: 8888
#    targetPort: 8888