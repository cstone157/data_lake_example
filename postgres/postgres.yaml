apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  namespace: stone-data-lake
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
#    path: /run/desktop/mnt/host/c/Users/c.stone/Documents/GitHub/data_lake_example/postgres/data # Hard coded
#    path: # This doesn't work
#      valueFrom:  
#        configMapKeyRef:
#          name: stone-data-lake-configmap
#          key: postgres-db-location
    path: ${postgres_local_path}
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop
  volumeMode: Filesystem 
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: stone-data-lake
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: stone-data-lake
spec:
  selector:
   matchLabels:
    app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14.5
          imagePullPolicy: "IfNotPresent"
          env:
           - name: POSTGRES_USER
             valueFrom:
               secretKeyRef:
                 name: stone-data-lake-secret
                 key: postgres_root_username
           - name: POSTGRES_PASSWORD
             valueFrom:
               secretKeyRef:
                 name: stone-data-lake-secret
                 key: postgres_root_password
           - name: POSTGRES_DB
             valueFrom:
               configMapKeyRef:
                 name: stone-data-lake-configmap
                 key: postgres-dbname
#          lifecycle:
#            postStart:
#              exec:
                #command: ["/bin/sh", "-c", {{cmd}}]
                #command: ["/bin/sh", "-c"]
                #args: ["su -c psql -U admin -d postgres 'CREATE DATABASE keycloak;' postgres"]

          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pvc
