#apiVersion: v1
#kind: Secret
#metadata:
#  name: postgres-secret
#  labels:
#    app: postgres
#type: Opaque
#data:
#    postgres-root-username: cm9vdA==
#    postgres-root-password: bXlwYXNzd29yZA==
#    postgres-root-username: ${_username}
#    postgres-root-password: ${_password}
#---
#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: postgres-configmap
#  labels:
#    app: postgres
#data:
#  postgres-dbname: pg-data-lake
#---
#kind: PersistentVolume
#apiVersion: v1
#metadata:
#  name: postgres-pv-volume
#  labels:
#    type: local
#    app: postgres
#spec:
#  storageClassName: manual
#  capacity:
#    storage: 5Gi
#  accessModes:
#    - ReadWriteMany
#  hostPath:
#    path: "/mnt/data"
#---
#kind: PersistentVolumeClaim
#apiVersion: v1
#metadata:
#  name: postgres-pv-claim
#  labels:
#    app: postgres
#spec:
#  storageClassName: manual
#  accessModes:
#    - ReadWriteMany
#  resources:
#    requests:
#      storage: 5Gi
apiVersion: v1
kind: PersistentVolume
metadata:
  name: stone-data-lake-postgres
  namespace: stone-data-lake
spec:
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /run/desktop/mnt/host/c/Users/c.stone/Documents/GitHub/data_lake_example/postgres/data
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - docker-desktop
  volumeMode: Filesystem 
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: stone-data-lake-postgres-pvc
  namespace: stone-data-lake
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: stone-data-lake
spec:
  selector:
   matchLabels:
    app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14.5
          imagePullPolicy: "IfNotPresent"
          env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: stone-data-lake-secret
                key: postgres_root_username
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: stone-data-lake-secret
                key: postgres_root_password
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: stone-data-lake-configmap
                key: postgres-dbname

          ports:
          - containerPort: 5432

          volumeMounts:
          - name: stone-data-lake-postgres
            mountPath: /var/lib/postgresql/data

      volumes:
      - name: stone-data-lake-postgres
        persistentVolumeClaim:
          claimName: stone-data-lake-postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: stone-data-lake
  labels:
    app: postgres
spec:
    ports:
    - name: postgres
      port: 5432
      nodePort: 30432
    type: NodePort
    selector:
      app: postgres